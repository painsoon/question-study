#需要的镜像：
zookeeper:3.5.5
wurstmeister/kafka:2.12-2.2.1
kafkamanager/kafka-manager:1.3.3.23

#ip规划：
##zookeeper集群：
10.18.4.53
10.18.4.80
10.18.4.93


##kafka集群：
10.18.4.53
10.18.4.81


##kafka manager ：
10.18.4.53


#zookeeper集群：
10.18.4.53:
```
version: '2.2'
services:
 zookeeper:
  image: "zookeeper:3.5"
  container_name: zookeeper-53
  restart: always
  ports:
    - 2181:2181
    - 2888:2888
    - 3888:3888
  volumes:
    - "/app/zookeeper/data:/data"
    - "/app/zookeeper/datalog:/datalog"
    - "/app/zookeeper/log:/log"
  environment:
    ZOO_MY_ID: 1
    ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181 server.2=10.18.4.80:2888:3888;2181 server.3=10.18.4.93:2888:3888;2181

```

10.18.4.80:

```
version: '2.2'
services:
 zookeeper:
  image: "zookeeper:3.5"
  container_name: zookeeper-80
  restart: always
  network_mode: "host"
  ports:
    - 2181:2181
    - 2888:2888
    - 3888:3888
  volumes:
    - "/app/zookeeper/data:/data"
    - "/app/zookeeper/datalog:/datalog"
    - "/app/zookeeper/log:/log"
  environment:
    ZOO_MY_ID: 2
    ZOO_SERVERS: server.1=10.18.4.53:2888:3888;2181 server.2=0.0.0.0:2888:3888;2181 server.3=10.18.4.93:2888:3888;2181
	
```

10.18.4.93:

```
version: '2.2'
services:
 zookeeper:
  image: "zookeeper:3.5"
  container_name: zookeeper-93
  restart: always
  ports:
    - 2181:2181
    - 2888:2888
    - 3888:3888
  volumes:
    - "/app/zookeeper/data:/data"
    - "/app/zookeeper/datalog:/datalog"
    - "/app/zookeeper/log:/log"
  environment:
    ZOO_MY_ID: 3
    ZOO_SERVERS: server.1=10.18.4.53:2888:3888;2181 server.2=10.18.4.80:2888:3888;2181 server.3=0.0.0.0:2888:3888;2181

```


##kafka集群：  
10.18.4.53:

```
version: '2.2'
services:
 kafka:
  image: "wurstmeister/kafka:2.12-2.3.0"
  container_name: kafka-53
#  network_mode: "host"
  restart: always
  privileged: true
  ports:
    - "9093:9092"
  environment:
   KAFKA_BROKER_ID: 2
   KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://10.18.4.53:9093
   KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9093 
   KAFKA_ZOOKEEPER_CONNECT: 10.18.4.53:2181,10.18.4.80:2181,10.18.4.93:2181
   ALLOW_PLAINTEXT_LISTENER: yes

```


10.18.4.81:

```
version: '2.2'
services:
 kafka:
  image: "wurstmeister/kafka:2.12-2.3.0"
  container_name: kafka-81
#  network_mode: "host"
  restart: always
  privileged: true
  ports:
    - "9092:9092"
  environment:
   KAFKA_BROKER_ID: 1
#   KAFKA_ADVERTISED_HOST_NAME: 10.18.4.53
   KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://10.18.4.81:9092
   KAFKA_ZOOKEEPER_CONNECT: 10.18.4.53:2181,10.18.4.80:2181,10.18.4.93:2181
   ALLOW_PLAINTEXT_LISTENER: yes


```

##kafka manager ：
docker run -d -p 9000:9000  --name kafka_manager -eZK_HOSTS=10.18.4.53 kafkamanager/kafka-manager



#集群验证：

##查看kafka的topic
kafka-topics.sh --zookeeper localhost:2181 --list  

##创建topic  
kafka-topics.sh --zookeeper localhost:2181 -create   --topic topic1--partitions 1  --replication-factor 1

##生产数据
kafka-console-producer.sh --broker-list localhost:9092   --topic topic1

##消费数据
kafka-console-consumer.sh --zookeeper localhost:2181   --topic topic1 --from-beginning  
或者  
kafka-console-consumer.sh --bootstrap-server localhost:9092   --topic topic1 --from-beginning  

##查看topic的详细信息
kafka-topics.sh -zookeeper localhost:2181 -describe -topic topic1









10.18.4.53:2888:3888;2181 server.2=10.18.4.80:2888:3888;2181 server.3=10.18.4.93:2888:3888;2181


version: '2.2'

# 给zk集群配置一个网络，网络名为zk-net
networks:
  zk-net:
    name: zk-net
	
services:
  zoo1:
    image: "zookeeper:3.5"
    restart: always
    hostname: zoo1
    container_name: zoo1
    ports:
    - 2181:2181
    - 2888:2888
    - 3888:3888
    volumes:
    - "/data/zookeeper/data:/data"
    - "/data/zookeeper/datalog:/datalog"
    - "/data/zookeeper/log:/log"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888
    networks:
      - zk-net

  zoo2:
    image: "zookeeper:3.5"
    restart: always
    hostname: zoo2
    container_name: zoo2
    ports:
    - 2181:2181
    - 2888:2888
    - 3888:3888
    volumes:
    - "/data/zookeeper/data:/data"
    - "/data/zookeeper/datalog:/datalog"
    - "/data/zookeeper/log:/log"
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=0.0.0.0:2888:3888 server.3=zoo3:2888:3888
    networks:
      - zk-net

  zoo3:
    image: "zookeeper:3.5"
    restart: always
    hostname: zoo3
    container_name: zoo3
    ports:
    - 2181:2181
    - 2888:2888
    - 3888:3888
    volumes:
    - "/data/zookeeper/data:/data"
    - "/data/zookeeper/datalog:/datalog"
    - "/data/zookeeper/log:/log"
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=0.0.0.0:2888:3888
    networks:
      - zk-net




js_eval.requests:100:1:delete --config=retention.ms=60000 --config=segment.bytes=26214400 --config=retention.bytes=104857600,tb_transport.api.requests:3:1:delete --config=retention.ms=60000 --config=segment.bytes=26214400 --config=retention.bytes=104857600